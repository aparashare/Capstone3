# Generated by Django 3.0.3 on 2020-05-14 13:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fmm.utils.helper
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCardCredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_pan', models.CharField(max_length=255, validators=[fmm.utils.helper.validate_luhn])),
                ('rec_token', models.CharField(blank=True, max_length=255, null=True)),
                ('card_type', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('exp_month', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('exp_year', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2100)])),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_credentials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_card_credential',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('CREATED', 'Transaction was created'), ('PENDING', 'Transaction is in pending state'), ('HOLD_PENDING', 'Hold transaction is in pending state'), ('HELD', 'Transaction to hold money is successful'), ('SUCCESS', 'Transaction is successful'), ('FAIL', 'Transaction failed'), ('REFUNDED', 'Transaction is refunded')], default='CREATED', max_length=255)),
                ('external_status', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('call_back_url', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('action', models.TextField(default='CHARGE', editable=False)),
                ('kind', models.TextField(default='SALE', editable=False)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=9)),
                ('fee', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('currency', models.TextField(choices=[('USD', 'USD'), ('EUR', 'EUR'), ('RUB', 'RUB'), ('UAH', 'UAH'), ('BYN', 'BYN'), ('KZT', 'KZT')], default='UAH', editable=False)),
                ('card_pan', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.TextField(choices=[('RAZORPAY', 'RazorPay payment'), ('OTHER', 'Other type of payment')], default='OTHER')),
                ('is_test', models.BooleanField(default=False)),
                ('success_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('refund_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card_creds', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='transactions', to='payment.UserCardCredentials')),
            ],
            options={
                'db_table': 'transaction',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='PTPTransaction',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('CREATED', 'Transaction was created'), ('PENDING', 'Transaction is in pending state'), ('HOLD_PENDING', 'Hold transaction is in pending state'), ('HELD', 'Transaction to hold money is successful'), ('SUCCESS', 'Transaction is successful'), ('FAIL', 'Transaction failed'), ('REFUNDED', 'Transaction is refunded')], default='CREATED', max_length=255)),
                ('external_status', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('call_back_url', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('kind', models.TextField(default='SALE', editable=False)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=9)),
                ('fee', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('currency', models.TextField(choices=[('USD', 'USD'), ('EUR', 'EUR'), ('RUB', 'RUB'), ('UAH', 'UAH'), ('BYN', 'BYN'), ('KZT', 'KZT')], default='UAH', editable=False)),
                ('card_pan', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.TextField(choices=[('RAZORPAY', 'RazorPay payment'), ('OTHER', 'Other type of payment')], default='OTHER')),
                ('is_test', models.BooleanField(default=False)),
                ('success_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('refund_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.TextField(default='P2P_TRANSFER')),
                ('beneficiary_card', models.CharField(max_length=255)),
                ('beneficiary_card_creds', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ptp_transactions_as_beneficiary', to='payment.UserCardCredentials')),
                ('card_creds', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ptp_transactions', to='payment.UserCardCredentials')),
            ],
            options={
                'db_table': 'ptp_transaction',
                'ordering': ('created_at',),
            },
        ),
    ]
